---
- name: Configure k3s
  hosts: cts_nodes
  become: true

  pre_tasks:
    - name: Remove cluster directory to get rid of old clusters
      file:
        path: "./clusters"
        state: absent
      delegate_to: localhost
      become: no
      run_once: true

    - name: Recreate cluster directory
      file:
        path: "./clusters"
        state: directory
      delegate_to: localhost
      become: no
      run_once: true

  tasks:
    - name: Download k3s
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0755'

    - name: Install k3s
      shell: |
        /tmp/k3s-install.sh server

    - name: Enable and start k3s
      systemd:
        name: k3s
        enabled: yes
        state: started

    - name: Read kubeconfig from remote
      slurp:
        src: /etc/rancher/k3s/k3s.yaml
      register: kubeconfig

    - name: Get k3s certificate
      set_fact:
        certificate: "{{ (kubeconfig.content | b64decode | from_yaml).users[0].user['client-certificate-data'] }}"

    - name: Get k3s key
      set_fact:
        key: "{{ (kubeconfig.content | b64decode | from_yaml).users[0].user['client-key-data'] }}"
    
    - name: Generate argocd cluster from jinja2 template
      template:
        src: cluster.j2
        dest: ./clusters/k3s-{{  inventory_hostname  }}.yaml
      delegate_to: localhost
      become: no

    - name: Apply Kubernetes Argocd clusters
      kubernetes.core.k8s:
        state: present
        src: "{{ item }}"
      with_fileglob:
        - "./clusters/*.yaml"
      delegate_to: localhost
      become: no
      run_once: true

    - name: Apply Argocd project
      kubernetes.core.k8s:
        state: present
        src: "{{ item }}"
      with_fileglob:
        - "../argocd/project.yaml"
      delegate_to: localhost
      become: no
      run_once: true

    - name: Apply Argocd repository
      kubernetes.core.k8s:
        state: present
        src: "{{ item }}"
      with_fileglob:
        - "../argocd/repository.yaml"
      delegate_to: localhost
      become: no
      run_once: true

    - name: Apply Argocd Application Set
      kubernetes.core.k8s:
        state: present
        src: "{{ item }}"
      with_fileglob:
        - "../argocd/application-set.yaml"
      delegate_to: localhost
      become: no
      run_once: true